<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="0" name="Alt-Ergo" version="2.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.8.4" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="pair_set.mlw"/>
<theory name="Pair_set" proved="true">
 <goal name="Sa.eq&#39;VC" expl="VC for eq" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="set&#39;VC" expl="VC for set" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="44"/></proof>
 </goal>
 <goal name="mem&#39;VC" expl="VC for mem" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="51"/></proof>
 </goal>
 <goal name="empty_set&#39;VC" expl="VC for empty_set" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="56"/></proof>
 </goal>
 <goal name="clear&#39;VC" expl="VC for clear" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="67"/></proof>
 </goal>
 <goal name="add&#39;VC" expl="VC for add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add&#39;VC.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="add&#39;VC.1" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="add&#39;VC.2" expl="assertion" proved="true">
  <transf name="destruct_term" proved="true" arg1="((hash_set s)[key x])">
   <goal name="add&#39;VC.2.0" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="28"/></proof>
   </goal>
   <goal name="add&#39;VC.2.1" expl="assertion" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;VC.3" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add&#39;VC.3.0" expl="type invariant" proved="true">
   <transf name="destruct_term" proved="true" arg1="((hash_set s2)[key x])">
    <goal name="add&#39;VC.3.0.0" expl="type invariant" proved="true">
    <proof prover="0"><result status="valid" time="0.04" steps="185"/></proof>
    </goal>
    <goal name="add&#39;VC.3.0.1" expl="type invariant" proved="true">
    <proof prover="0"><result status="valid" time="0.01" steps="4"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="add&#39;VC.3.1" expl="type invariant" proved="true">
   <proof prover="0"><result status="valid" time="0.06" steps="365"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add&#39;VC.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="add&#39;VC.5" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="add&#39;VC.6" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="add&#39;VC.7" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="add&#39;VC.8" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.05" steps="521"/></proof>
  </goal>
  <goal name="add&#39;VC.9" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="singleton&#39;VC" expl="VC for singleton" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="61"/></proof>
 </goal>
 <goal name="remove&#39;VC" expl="VC for remove" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="remove&#39;VC.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="remove&#39;VC.1" expl="type invariant" proved="true">
  <proof prover="0"><result status="valid" time="0.29" steps="3097"/></proof>
  <proof prover="1" obsolete="true"><result status="timeout" time="1.00" steps="2729169"/></proof>
  <proof prover="2" obsolete="true"><result status="timeout" time="1.00" steps="220427"/></proof>
  </goal>
  <goal name="remove&#39;VC.2" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="get_element&#39;VC" expl="VC for get_element" proved="true">
 <proof prover="0"><result status="valid" time="0.02" steps="130"/></proof>
 </goal>
</theory>
</file>
</why3session>
