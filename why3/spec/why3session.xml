<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="8">
<prover id="2" name="Alt-Ergo" version="2.3.0" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="spec.mlw"/>
<theory name="KeyServer" proved="true">
 <goal name="state&#39;VC" expl="VC for state" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="10"/></proof>
 </goal>
 <goal name="init&#39;VC" expl="VC for init" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="init&#39;VC.0" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="init&#39;VC.0.0" expl="precondition" proved="true">
   <proof prover="2"><result status="valid" time="0.01" steps="10"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="getExisting&#39;VC" expl="VC for getExisting" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="getExisting&#39;VC.0" expl="assertion" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="74"/></proof>
  </goal>
  <goal name="getExisting&#39;VC.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="getExisting&#39;VC.1.0" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="getExisting&#39;VC.1.0.0" expl="postcondition" proved="true">
    <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="3.51" steps="7411"/></proof>
    </goal>
    <goal name="getExisting&#39;VC.1.0.1" expl="postcondition" proved="true">
    <proof prover="2" timelimit="10" memlimit="4000"><result status="valid" time="0.00" steps="14"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="getExisting&#39;VC.1.1" expl="postcondition" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="getExisting&#39;VC.1.1.0" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.01" steps="12"/></proof>
    </goal>
    <goal name="getExisting&#39;VC.1.1.1" expl="postcondition" proved="true">
    <proof prover="2"><result status="valid" time="0.00" steps="37"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="requestAdd&#39;VC" expl="VC for requestAdd" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="requestAdd&#39;VC.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="requestAdd&#39;VC.0.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.01" steps="4"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="requestAdd&#39;VC.1" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="32"/></proof>
  </goal>
  <goal name="requestAdd&#39;VC.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="confirm_add&#39;VC" expl="VC for confirm_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="confirm_add&#39;VC.0" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="confirm_add&#39;VC.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="confirm_add&#39;VC.1.0" expl="postcondition" proved="true">
   <transf name="exists" proved="true" arg1="x1">
    <goal name="confirm_add&#39;VC.1.0.0" proved="true">
    <transf name="exists" proved="true" arg1="x">
     <goal name="confirm_add&#39;VC.1.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.01" steps="14"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="confirm_add&#39;VC.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="confirm_add&#39;VC.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="confirm_add&#39;VC.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.00" steps="4"/></proof>
   </goal>
   <goal name="confirm_add&#39;VC.3.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.01" steps="8"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="confirm_add&#39;VC.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="requestdel&#39;VC" expl="VC for requestdel" proved="true">
 <proof prover="2"><result status="valid" time="0.02" steps="79"/></proof>
 </goal>
 <goal name="confirm_del&#39;VC" expl="VC for confirm_del" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="confirm_del&#39;VC.0" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="confirm_del&#39;VC.0.0" expl="type invariant" proved="true">
   <proof prover="2"><result status="valid" time="0.01" steps="18"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="confirm_del&#39;VC.1" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="confirm_del&#39;VC.1.0" expl="postcondition" proved="true">
   <transf name="exists" proved="true" arg1="x1">
    <goal name="confirm_del&#39;VC.1.0.0" proved="true">
    <transf name="exists" proved="true" arg1="x">
     <goal name="confirm_del&#39;VC.1.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.00" steps="14"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="confirm_del&#39;VC.2" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="confirm_del&#39;VC.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="confirm_del&#39;VC.3.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.00" steps="4"/></proof>
   </goal>
   <goal name="confirm_del&#39;VC.3.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.01" steps="8"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="confirm_del&#39;VC.4" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Implem" proved="true">
 <goal name="concrete_state&#39;VC" expl="VC for concrete_state" proved="true">
 <proof prover="2"><result status="valid" time="0.01" steps="208"/></proof>
 </goal>
 <goal name="init&#39;VC" expl="VC for init" proved="true">
 <proof prover="2"><result status="valid" time="0.03" steps="218"/></proof>
 </goal>
 <goal name="get&#39;VC" expl="VC for get" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="get&#39;VC.0" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="get&#39;VC.0.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="6"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="get&#39;VC.1" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="31"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add&#39;VC" expl="VC for add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add&#39;VC.0" expl="exceptional postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="add&#39;VC.1" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="69"/></proof>
  </goal>
  <goal name="add&#39;VC.2" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="59"/></proof>
  </goal>
  <goal name="add&#39;VC.3" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.10" steps="674"/></proof>
  </goal>
  <goal name="add&#39;VC.4" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="333"/></proof>
  </goal>
  <goal name="add&#39;VC.5" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="82"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_c&#39;VC" expl="VC for add_c" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="add_c&#39;VC.0" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="48"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="add_c&#39;VC.0.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.01" steps="4"/></proof>
   </goal>
   <goal name="add_c&#39;VC.0.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="26"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_c&#39;VC.1" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
  <goal name="add_c&#39;VC.2" expl="precondition" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="28"/></proof>
  </goal>
  <goal name="add_c&#39;VC.3" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="80"/></proof>
  </goal>
  <goal name="add_c&#39;VC.4" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.04" steps="197"/></proof>
  </goal>
  <goal name="add_c&#39;VC.5" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.14" steps="919"/></proof>
  </goal>
  <goal name="add_c&#39;VC.6" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.07" steps="429"/></proof>
  </goal>
  <goal name="add_c&#39;VC.7" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_c&#39;VC.7.0" expl="postcondition" proved="true">
   <transf name="exists" proved="true" arg1="x1">
    <goal name="add_c&#39;VC.7.0.0" proved="true">
    <transf name="exists" proved="true" arg1="x">
     <goal name="add_c&#39;VC.7.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.02" steps="54"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add_c&#39;VC.8" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="62"/></proof>
  </goal>
  <goal name="add_c&#39;VC.9" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="72"/></proof>
  </goal>
  <goal name="add_c&#39;VC.10" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.01" steps="99"/></proof>
  </goal>
  <goal name="add_c&#39;VC.11" expl="type invariant" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_c&#39;VC.11.0" expl="type invariant" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="136"/></proof>
   </goal>
   <goal name="add_c&#39;VC.11.1" expl="type invariant" proved="true">
   <proof prover="2"><result status="valid" time="0.04" steps="193"/></proof>
   </goal>
   <goal name="add_c&#39;VC.11.2" expl="type invariant" proved="true">
   <proof prover="2"><result status="valid" time="0.02" steps="189"/></proof>
   </goal>
   <goal name="add_c&#39;VC.11.3" expl="type invariant" proved="true">
   <proof prover="2"><result status="valid" time="0.01" steps="481"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="add_c&#39;VC.12" expl="type invariant" proved="true">
  <proof prover="2"><result status="valid" time="0.05" steps="429"/></proof>
  </goal>
  <goal name="add_c&#39;VC.13" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="add_c&#39;VC.13.0" expl="postcondition" proved="true">
   <transf name="exists" proved="true" arg1="x1">
    <goal name="add_c&#39;VC.13.0.0" proved="true">
    <transf name="exists" proved="true" arg1="x">
     <goal name="add_c&#39;VC.13.0.0.0" proved="true">
     <proof prover="2"><result status="valid" time="0.02" steps="59"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="add_c&#39;VC.14" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="52"/></proof>
  </goal>
  <goal name="add_c&#39;VC.15" expl="unreachable point" proved="true">
  <proof prover="2"><result status="valid" time="0.02" steps="94"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Sk.eq&#39;VC" expl="VC for eq">
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 </goal>
 <goal name="del_c&#39;VC" expl="VC for del_c">
 <proof prover="2"><result status="failure" time="0.00"/></proof>
 </goal>
 <goal name="del&#39;VC" expl="VC for del">
 <transf name="split_vc" >
  <goal name="del&#39;VC.0" expl="type invariant">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="del&#39;VC.1" expl="type invariant">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="del&#39;VC.2" expl="type invariant">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="del&#39;VC.3" expl="type invariant">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="del&#39;VC.4" expl="postcondition">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
  <goal name="del&#39;VC.5" expl="exceptional postcondition">
  <proof prover="2"><result status="failure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
